

var Profiles;
(function (Profiles) {
    function createProfilesSubNavBars(namespace, projectId) {
        return Developer.activateCurrent([
            {
                href: UrlHelpers.join(HawtioCore.documentBase(), '/workspaces', namespace, 'projects', projectId, 'profiles'),
                label: 'Profiles',
                title: 'Profiles'
            },
            {
                href: UrlHelpers.join(HawtioCore.documentBase(), '/workspaces', namespace, 'projects', projectId, 'profiles', 'containers'),
                label: 'Containers',
                title: 'Containers',
                isActive: function (item, path) { return _.startsWith(path, item.href); }
            },
            {
                href: UrlHelpers.join(HawtioCore.documentBase(), '/workspaces', namespace, 'projects', projectId, 'profiles', 'settings'),
                label: 'Settings',
                title: 'Settings'
            }
        ]);
    }
    Profiles.createProfilesSubNavBars = createProfilesSubNavBars;
})(Profiles || (Profiles = {}));

var Profiles;
(function (Profiles) {
    Profiles.pluginName = 'profiles';
    Profiles.log = Logger.get(Profiles.pluginName);
    Profiles.templatePath = 'plugins/' + Profiles.pluginName + '/html/';
    Profiles.module = angular.module(Profiles.pluginName, ['hawtio-core', 'hawtio-ui', 'hawtio-forms', 'blockUI', 'ui.select', 'ngSanitize']);
    Profiles.module.config(['$routeProvider', 'blockUIConfig', function ($routeProvider, blockUIConfig) {
            blockUIConfig.autoBlock = false;
            blockUIConfig.delay = 0;
            var join = UrlHelpers.join;
            var route = Developer.createTabRoutingFunction(Profiles.templatePath);
            var base = '/workspaces/:namespace/projects/:projectId/profiles';
            Developer.customProjectSubTabFactories.push(function (context) {
                if (context.$scope) {
                    Forge.updateForgeProject(context.$scope);
                }
                return [{
                        isValid: function () { return context.projectLink && Developer.forgeReadyLink() && Forge.forgeProject().hasPerspective('fabric8-profiles'); },
                        href: join(context.projectLink, 'profiles'),
                        class: 'fa fa-code-fork',
                        label: 'Profiles',
                        title: 'Browse the profiles of this project',
                        isActive: function (subTab, path) { return _.startsWith(path, join(context.projectLink, 'profiles')); }
                    }];
            });
            $routeProvider
                .when(base, route('profiles.html', false))
                .when(join(base, 'containers', 'assignProfiles'), route('assignProfiles.html', false))
                .when(join(base, 'containers', 'deployProfiles'), route('deployProfiles.html', false))
                .when(join(base, 'containers'), route('containers.html', false))
                .when(join(base, 'settings'), route('settings.html', false));
        }]);
    Profiles.module.directive('templateCacheInclude', ['$compile', '$templateCache', function ($compile, $templateCache) { return ({
            restrict: 'A',
            priority: 400,
            compile: function (element, attrs) {
                var templateName = attrs.templateCacheInclude;
                var template = $templateCache.get(templateName);
                return function (scope, element) {
                    element.html(template);
                    $compile(element.contents())(scope);
                };
            }
        }); }
    ]);
    hawtioPluginLoader.addModule(Profiles.pluginName);
})(Profiles || (Profiles = {}));

var Profiles;
(function (Profiles) {
    Profiles.module.controller('Profiles.AssignProfilesController', ['$scope', '$location', '$templateCache', 'profiles', 'containers', 'blockUI', 'jsyaml', function ($scope, $location, $templateCache, profiles, containers, blockUI, yaml) {
            $scope.tabs = Profiles.createProfilesSubNavBars($scope.namespace, $scope.projectId);
            Forge.updateForgeProject($scope);
            $scope.gitRestUrl = function (path) { return Wiki.gitRestURL($scope, path); };
            $scope.profiles = profiles;
            $scope.containers = containers;
            $scope.selectable = true;
            $scope.profileGroups = function (profile) { return profile.tags.length > 0 ? profile.tags[0] : ''; };
            var saving = 0;
            $scope.saving = function () { return saving > 0; };
            var blockTable = blockUI.instances.get('blockTable');
            $scope.assignProfiles = function () {
                var wiki = new Wiki.GitWikiRepository($scope);
                var success = function (response) {
                    Wiki.onComplete(response);
                    Core.notification('success', response.file + ' saved!');
                    complete();
                };
                var failure = function (response) {
                    Core.notification('error', response);
                    complete();
                };
                var complete = function () {
                    if (--saving === 0) {
                        blockTable.message('Refreshing ...');
                        containers.load(wiki, $scope.branch).then(function () {
                            blockTable.stop();
                            $location.path(UrlHelpers.join('/workspaces', $scope.namespace, 'projects', $scope.projectId, 'profiles', 'containers'));
                        });
                    }
                };
                blockTable.start("Saving ...");
                containers.cart.forEach(function (container) {
                    saving++;
                    wiki.putPage($scope.branch, container.path, assignProfiles(container, profiles.cart), 'Assign profiles', success, failure);
                });
            };
            var assignProfiles = function (container, profiles) { return yaml.safeDump({
                container: {
                    profiles: profiles.map(function (profile) { return profile.id; }).join(' '),
                    'container-type': container.types.join(' ')
                }
            }); };
            $scope.refreshContainers = function () { return containers.load(new Wiki.GitWikiRepository($scope), $scope.branch); };
            $scope.refreshProfiles = function () {
                if (!profiles.loading) {
                    profiles.load(new Wiki.GitWikiRepository($scope), $scope.branch);
                }
            };
            if (!(containers.loaded || containers.loading)) {
                $scope.refreshContainers();
            }
        }]);
})(Profiles || (Profiles = {}));

var Profiles;
(function (Profiles) {
    Profiles.module.controller('Profiles.ContainerListController', ['$scope', '$location', '$templateCache', 'profiles', 'containers', 'KubernetesModel',
        function ($scope, $location, $templateCache, profiles, containers, kubernetes) {
            $scope.viewProfile = function (profile) { return $location.path(Wiki.viewLink($scope.projectId, $scope.branch, profile.path, $location)); };
            $scope.profiles = profiles;
            $scope.containers = containers;
            $scope.tableConfig = {
                data: 'containers.data',
                showSelectionCheckbox: $scope.selectable || false,
                enableRowClickSelection: $scope.selectable || false,
                multiSelect: true,
                selectedItems: $scope.selectable ? containers.cart : [],
                filterOptions: {
                    filterText: $location.search()['q'] || ''
                },
                columnDefs: [
                    { field: 'name',
                        displayName: 'Name',
                        cellTemplate: $templateCache.get('containerName.html')
                    },
                    { field: 'pods',
                        displayName: 'Pods',
                        cellTemplate: $templateCache.get('containerPods.html')
                    },
                    { field: 'types',
                        displayName: 'Types',
                        cellTemplate: $templateCache.get('containerTypes.html')
                    },
                    { field: 'profiles',
                        displayName: 'Profiles',
                        cellTemplate: $templateCache.get('containerProfiles.html')
                    }
                ]
            };
            $scope.$watchCollection('profiles.data', function (profiles) {
                return containers.data.forEach(function (container) {
                    return profiles.forEach(function (profile) {
                        var i = _.indexOf(container.profiles, profile.id);
                        if (i >= 0) {
                            container.profiles[i] = profile;
                        }
                    });
                });
            });
            $scope.$watch('containers.cart', function (containers) {
                $scope.tableConfig.selectedItems = containers;
                $scope.$broadcast('hawtio.datatable.containers.data');
            });
            $scope.$on('kubernetesModelUpdated', function () {
                return _.filter(containers.data, function (container) { return !container.deployment; })
                    .forEach(function (container) { return container.deployment = kubernetes.getDeployment($scope.namespace || Kubernetes.currentKubernetesNamespace(), container.name); });
            });
            if (!(containers.loaded || containers.loading)) {
                $scope.refresh();
            }
        }]);
    Profiles.module.filter('kubernetesPageLink', function () { return function (entity, path1, path2) { return UrlHelpers.join(Kubernetes.entityPageLink(entity), path1, path2); }; });
})(Profiles || (Profiles = {}));

var Profiles;
(function (Profiles) {
    var icons = {
        camel: 'camel',
        jenkinsfile: 'jenkins',
        karaf: 'karaf'
    };
    var Containers = (function () {
        function Containers(profiles, kubernetes, $q, yaml) {
            var _this = this;
            this.loaded = false;
            this.loading = false;
            this.requests = 0;
            this.data = [];
            this.cart = [];
            this.load = function (wiki, branch, namespace) {
                _this.loading = true;
                _this.requests++;
                var data = [];
                var deferred = _this.$q.defer();
                wiki.getPage(branch, 'configs/containers', null, function (page) {
                    _.forEach(page.children, function (child) {
                        if (!child.directory && _.endsWith(child.name, '.yaml')) {
                            _this.requests++;
                            wiki.getPage(branch, child.path, null, function (page) {
                                var properties = _this.yaml.safeLoad(page.text);
                                var name = page.name.replace(/.yaml/, '');
                                var container = {
                                    name: name,
                                    path: page.path,
                                    deployment: _this.kubernetes.getDeployment(namespace || Kubernetes.currentKubernetesNamespace(), name),
                                    profiles: _.map(properties.container.profiles.split(' '), function (profile) { return _.find(_this.profiles.data, { id: profile }) || profile; }),
                                    types: properties.container['container-type'].split(' '),
                                    icons: properties.container['container-type'].split(' ').map(function (type) { return {
                                        title: type,
                                        type: 'img',
                                        src: 'img/icons/' + (type.toLowerCase() in icons ? icons[type.toLowerCase()] : 'java') + '.svg'
                                    }; })
                                };
                                if (container.deployment) {
                                    container.icons.push({
                                        type: 'img',
                                        src: container.deployment.$iconUrl
                                    });
                                }
                                data.push(container);
                                _this.complete(data);
                            });
                        }
                    });
                    _this.complete(data);
                    deferred.resolve();
                });
                return deferred.promise;
            };
            this.complete = function (data) {
                if (--_this.requests === 0) {
                    _this.data.length = 0;
                    (_a = _this.data).push.apply(_a, data);
                    _this.loading = false;
                    _this.loaded = true;
                }
                var _a;
            };
            this.profiles = profiles;
            this.kubernetes = kubernetes;
            this.$q = $q;
            this.yaml = yaml;
        }
        return Containers;
    }());
    Profiles.Containers = Containers;
    Profiles.module.service('containers', ['profiles', 'KubernetesModel', '$q', 'jsyaml', Containers]);
    Profiles.module.controller('Profiles.ContainersController', ['$scope', '$location', 'containers', 'blockUI',
        function ($scope, $location, containers, blockUI) {
            $scope.tabs = Profiles.createProfilesSubNavBars($scope.namespace, $scope.projectId);
            Forge.updateForgeProject($scope);
            $scope.containers = containers;
            $scope.selectable = true;
            var saving = 0;
            $scope.saving = function () { return saving > 0; };
            var blockTable = blockUI.instances.get('blockTable');
            $scope.createContainers = function () { return $location.path(UrlHelpers.join('/workspaces', $scope.namespace, 'projects', $scope.projectId, 'profiles', 'containers', 'deployProfiles')); };
            $scope.assignProfiles = function () { return $location.path(UrlHelpers.join('/workspaces', $scope.namespace, 'projects', $scope.projectId, 'profiles', 'containers', 'assignProfiles')); };
            $scope.deleteContainers = function () {
                var wiki = new Wiki.GitWikiRepository($scope);
                var success = function (response, container) {
                    Wiki.onComplete(response);
                    Core.notification('success', container + ' deleted!');
                    complete();
                };
                var failure = function (response) {
                    Core.notification('error', response);
                    complete();
                };
                var complete = function () {
                    if (--saving === 0) {
                        blockTable.message('Refreshing ...');
                        containers.load(wiki, $scope.branch).then(function () {
                            blockTable.stop();
                            $location.path(UrlHelpers.join('/workspaces', $scope.namespace, 'projects', $scope.projectId, 'profiles', 'containers'));
                        });
                    }
                };
                blockTable.start("Saving ...");
                containers.cart.forEach(function (container) {
                    saving++;
                    wiki.removePage($scope.branch, container.path, 'Delete container', function (response) { return success(response, container.name); });
                });
            };
            $scope.refresh = function () { return containers.load(new Wiki.GitWikiRepository($scope), $scope.branch, $scope.namespace); };
        }]);
})(Profiles || (Profiles = {}));

var Profiles;
(function (Profiles) {
    Profiles.module.controller('Profiles.DeployProfilesController', ['$scope', '$location', '$templateCache', 'profiles', 'containers', 'blockUI', 'jsyaml', function ($scope, $location, $templateCache, profiles, containers, blockUI, yaml) {
            $scope.tabs = Profiles.createProfilesSubNavBars($scope.namespace, $scope.projectId);
            Forge.updateForgeProject($scope);
            $scope.gitRestUrl = function (path) { return Wiki.gitRestURL($scope, path); };
            $scope.profiles = profiles;
            $scope.containers = containers;
            $scope.select = {
                names: []
            };
            $scope.selectable = false;
            $scope.profileGroups = function (profile) { return profile.tags.length > 0 ? profile.tags[0] : ''; };
            var saving = 0;
            $scope.saving = function () { return saving > 0; };
            var blockTable = blockUI.instances.get('blockTable');
            $scope.deployProfiles = function () {
                var wiki = new Wiki.GitWikiRepository($scope);
                var success = function (response) {
                    Wiki.onComplete(response);
                    Core.notification('success', response.file + ' saved!');
                    complete();
                };
                var failure = function (response) {
                    Core.notification('error', response);
                    complete();
                };
                var complete = function () {
                    if (--saving === 0) {
                        blockTable.message('Refreshing ...');
                        containers.load(wiki, $scope.branch).then(function () {
                            blockTable.stop();
                            $location.path(UrlHelpers.join('/workspaces', $scope.namespace, 'projects', $scope.projectId, 'profiles', 'containers'));
                        });
                    }
                };
                blockTable.start("Saving ...");
                saving++;
                $scope.select.names.forEach(function (name) {
                    return wiki.putPage($scope.branch, 'configs/containers/' + name + '.yaml', deployProfiles(name, profiles.cart), 'Deploy profiles into ' + name, success, failure);
                });
            };
            var deployProfiles = function (container, profiles) { return yaml.safeDump({
                container: {
                    profiles: profiles.map(function (profile) { return profile.id; }).join(' '),
                    'container-type': 'karaf jenkinsfile'
                }
            }); };
            $scope.existingContainers = function (names) { return _.intersection(names, _.pluck(containers.data, 'name')); };
            $scope.refreshContainers = function () { return containers.load(new Wiki.GitWikiRepository($scope), $scope.branch); };
            $scope.refreshProfiles = function () {
                if (!profiles.loading) {
                    profiles.load(new Wiki.GitWikiRepository($scope), $scope.branch);
                }
            };
            if (!(containers.loaded || containers.loading)) {
                $scope.refreshContainers();
            }
        }]);
})(Profiles || (Profiles = {}));

var Profiles;
(function (Profiles_1) {
    var Profiles = (function () {
        function Profiles() {
            var _this = this;
            this.loaded = false;
            this.loading = false;
            this.data = [];
            this.cart = [];
            this.requests = 0;
            this.load = function (wiki, branch, path) {
                if (path === void 0) { path = 'profiles'; }
                _this.loading = true;
                _this.data.length = 0;
                _this.requests = 0;
                _this.findProfiles(wiki, branch, path);
            };
            this.findProfiles = function (wiki, branch, path) {
                _this.requests++;
                wiki.getPage(branch, path, null, function (data) {
                    if (data.children) {
                        _.forEach(data.children, function (value) {
                            if (value.directory && _.endsWith(value.name, '.profile')) {
                                _this.loadProfile(wiki, branch, value);
                            }
                            else if (value.directory) {
                                _this.findProfiles(wiki, branch, value.path);
                            }
                        });
                    }
                    _this.complete();
                });
            };
            this.loadProfile = function (wiki, branch, value) {
                var info = /^profiles\/((?:.+)\/)*(.+).profile$/.exec(value.path);
                var profile = {
                    id: (info[1] ? info[1].replace(/\//g, '-') : '') + info[2],
                    name: info[2],
                    path: value.path,
                    tags: info[1] ? info[1].slice(0, -1).split('/') : []
                };
                _this.requests++;
                wiki.getPage(branch, value.path, null, function (data) {
                    for (var _i = 0, _a = data.children; _i < _a.length; _i++) {
                        var child = _a[_i];
                        var name_1 = child.name.toUpperCase();
                        if (name_1 == 'README.MD' || name_1 == 'SUMMARY.MD') {
                            profile.summaryUrl = child.path;
                        }
                        else if (name_1 == 'ICON.SVG') {
                            profile.iconUrl = child.path;
                        }
                    }
                    _this.data.splice(_.sortedIndex(_this.data, profile, 'id'), 0, profile);
                    var i = _.findIndex(_this.cart, { id: profile.id });
                    if (i >= 0) {
                        _this.cart[i] = profile;
                    }
                    _this.complete();
                });
            };
            this.complete = function () {
                if (--_this.requests === 0) {
                    SelectionHelpers.syncGroupSelection(_this.cart, _this.data, 'id');
                    _this.loading = false;
                    _this.loaded = true;
                }
            };
        }
        return Profiles;
    }());
    Profiles_1.Profiles = Profiles;
    var ProfileView = (function () {
        function ProfileView(scope) {
            this.scope = scope;
        }
        Object.defineProperty(ProfileView.prototype, "openOrSingle", {
            get: function () {
                var scope = this.scope;
                if (scope.filteredProfiles.length === 1) {
                    if (!this.force && (!scope.loading() || scope.profiles.length > 1)) {
                        return true;
                    }
                }
                else {
                    this.force = false;
                }
                return this.open;
            },
            set: function (open) {
                if (this.scope.filteredProfiles.length === 1) {
                    this.force = true;
                }
                this.open = open;
            },
            enumerable: true,
            configurable: true
        });
        return ProfileView;
    }());
    var ProfileViews = (function () {
        function ProfileViews() {
            this.selectedTags = [];
            this.profileViews = {};
        }
        return ProfileViews;
    }());
    Profiles_1.module.service('profiles', Profiles);
    Profiles_1.module.service('profileViews', ProfileViews);
    Profiles_1.module.constant('jsyaml', jsyaml);
    Profiles_1.module.filter('filterCollection', function () { return function (collection, text) {
        return Core.isBlank(text)
            ? collection
            : _.filter(collection, function (item) { return FilterHelpers.searchObject(item, text); });
    }; });
    Profiles_1.module.controller('Profiles.ProfilesController', ['$scope', '$location', 'marked', '$sce', 'profiles', 'profileViews',
        function ($scope, $location, marked, $sce, profiles, profileViews) {
            $scope.tabs = Profiles_1.createProfilesSubNavBars($scope.namespace, $scope.projectId);
            Forge.updateForgeProject($scope);
            $scope.gitRestUrl = function (path) { return Wiki.gitRestURL($scope, path); };
            $scope.profiles = profiles.data;
            $scope.selection = profiles.cart;
            $scope.selectedTags = profileViews.selectedTags;
            $scope.profileViews = profileViews.profileViews;
            SelectionHelpers.decorate($scope);
            $scope.isBlank = Core.isBlank;
            $scope.loading = function () { return profiles.loading; };
            $scope.wikiLink = function (path) { return Wiki.viewLink($scope.projectId, $scope.branch, path, $location); };
            var wiki = new Wiki.GitWikiRepository($scope);
            $scope.loadSummary = function (profile) {
                if (profile.summaryUrl) {
                    var renderer_1 = new marked.Renderer();
                    renderer_1.image = function (href, title, text) {
                        var uri = new URI(href);
                        if (uri.is('relative')) {
                            if (_.startsWith(uri.path(), '/')) {
                                uri.segment(['profiles'].concat(uri.segment()));
                            }
                            else {
                                uri = uri.absoluteTo(UrlHelpers.join(profile.path, '/'));
                            }
                            var src = Wiki.gitRestURL($scope, uri.normalize().toString());
                            return '<img src="img/loader.svg" http-src="' + src + '" alt="' + (title ? title : text) + '" />';
                        }
                        else {
                            return '<img src="' + href + '" alt="' + (title ? title : text) + '" />';
                        }
                    };
                    wiki.getPage($scope.branch, profile.summaryUrl, null, function (data) { return profile.summary = marked(data.text, { renderer: renderer_1 }); });
                }
                else {
                    profile.summary = '<em>no summary</em>';
                }
            };
            $scope.assignProfiles = function () { return $location.path(UrlHelpers.join('/workspaces', $scope.namespace, 'projects', $scope.projectId, 'profiles', 'containers', 'assignProfiles')); };
            $scope.deployProfiles = function () { return $location.path(UrlHelpers.join('/workspaces', $scope.namespace, 'projects', $scope.projectId, 'profiles', 'containers', 'deployProfiles')); };
            var updateProfileViews = function (profiles) { return _.reduce(profiles, function (profileViews, profile) {
                if (!_.has(profileViews, profile.id)) {
                    profileViews[profile.id] = new ProfileView($scope);
                }
                else {
                    profileViews[profile.id].scope = $scope;
                }
                return profileViews;
            }, $scope.profileViews); };
            _.keys($scope.profileViews).forEach(function (key) { return delete $scope.profileViews[key]; });
            $scope.$watchCollection('profiles', updateProfileViews);
            $scope.refresh = function () { return profiles.load(wiki, $scope.branch); };
            if (!(profiles.loaded || profiles.loading)) {
                $scope.refresh();
            }
        }]);
})(Profiles || (Profiles = {}));

var Profiles;
(function (Profiles) {
    Profiles.module.controller('Profiles.SettingsController', ['$scope', 'jsyaml', function ($scope, yaml) {
            $scope.tabs = Profiles.createProfilesSubNavBars($scope.namespace, $scope.projectId);
            Forge.updateForgeProject($scope);
            var wikiRepository = new Wiki.GitWikiRepository($scope);
            $scope.loading = 0;
            $scope.config = {
                style: HawtioForms.FormStyle.STANDARD,
                mode: HawtioForms.FormMode.VIEW,
                properties: {
                    'git.gitRemoteUriPattern': {
                        type: 'string',
                        description: 'Git remote URI pattern for all containers, name is the name of the container, e.g. root'
                    },
                    'git.gogsUsername': {
                        type: 'string'
                    },
                    'git.gogsPassword': {
                        type: 'password'
                    },
                    'maven.groupId': {
                        type: 'string'
                    },
                    'maven.version': {
                        type: 'string'
                    }
                }
            };
            $scope.refresh = function () {
                $scope.loading++;
                wikiRepository.getPage($scope.branch, 'fabric8-profiles.yaml', null, function (data) {
                    $scope.loading--;
                    $scope.settings = data.text;
                    $scope.properties = yaml.safeLoad(data.text);
                });
            };
            $scope.$watch('loading', function (value) { return $scope.config.mode = value > 0
                ? HawtioForms.FormMode.VIEW
                : HawtioForms.FormMode.EDIT; });
            $scope.save = function () {
                var edit = yaml.safeDump($scope.properties);
                if (edit != $scope.settings) {
                    $scope.loading++;
                    wikiRepository.putPage($scope.branch, 'fabric8-profiles.yaml', edit, 'Update profiles settings', function (response) {
                        Wiki.onComplete(response);
                        Core.notification('success', response.file + ' saved!');
                        $scope.loading--;
                    }, function (response) {
                        Core.notification('error', response);
                        $scope.loading--;
                    });
                }
            };
            $scope.refresh();
        }
    ]);
})(Profiles || (Profiles = {}));

//# sourceMappingURL=data:application/json;base64,

angular.module("hawtio-profiles-templates", []).run(["$templateCache", function($templateCache) {$templateCache.put("plugins/profiles/html/assignProfiles.html","<div ng-controller=\"Profiles.AssignProfilesController\">\n\n  <div class=\"row\">\n    <div template-cache-include=\"plugins/kubernetes/html/tabs.html\"></div>\n  </div>\n\n  <h2>Assign profile(s) to container(s)</h2>\n\n  <div class=\"row\">\n    <form class=\"form-horizontal\">\n      <div class=\"form-group has-feedback\" ng-class=\"profiles.cart.length > 0 ? \'has-success\' : \'has-error\'\">\n        <label class=\"control-label col-sm-2\">Profile(s)</label>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group\">\n            <ui-select multiple sortable=\"true\" ng-model=\"profiles.cart\" theme=\"bootstrap\" aria-describedby=\"selectProfilesStatus\">\n              <ui-select-match placeholder=\"Select profiles...\">\n                <img ng-if=\"$item.iconUrl\" width=\"16px\" height=\"16px\"\n                     class=\"profile-logo\" style=\"max-width: 16px; max-height: 16px\"\n                     src=\"img/loader.svg\"\n                     http-src=\"{{gitRestUrl($item.iconUrl)}}\" media-type=\"image/svg+xml\" />\n                <img ng-if=\"!$item.iconUrl\" width=\"16px\" height=\"16px\"\n                     class=\"profile-logo\" style=\"max-width: 16px; max-height: 16px\"\n                     src=\"img/fabric8_icon.svg\" />\n                {{$item.id}}\n              </ui-select-match>\n              <ui-select-choices group-by=\"profileGroups\" repeat=\"profile in (profiles.data | filter: $select.search) track by profile.id\">\n                <img ng-if=\"profile.iconUrl\"\n                     class=\"profile-logo\" style=\"max-width: 32px; max-height: 32px\"\n                     src=\"img/loader.svg\"\n                     http-src=\"{{gitRestUrl(profile.iconUrl)}}\" media-type=\"image/svg+xml\" />\n                <img ng-if=\"!profile.iconUrl\"\n                     class=\"profile-logo\" style=\"max-width: 32px; max-height: 32px\"\n                     src=\"img/fabric8_icon.svg\" />\n                <span ng-bind-html=\"profile.id | highlight: $select.search\"></span>\n              </ui-select-choices>\n              <ui-select-no-choice>\n                <a ng-click=\"refreshProfiles()\">No profile is available. Click to refresh available profiles.</a>\n              </ui-select-no-choice>\n            </ui-select>\n            <span class=\"glyphicon form-control-feedback\" ng-class=\"profiles.cart.length > 0 ? \'glyphicon-ok\' : \'glyphicon-remove\'\" aria-hidden=\"true\"></span>\n            <span id=\"selectProfilesStatus\" class=\"sr-only\">{{profiles.cart.length > 0 ? \'(success)\' : \'(error)\'}}</span>\n            <span class=\"input-group-addon\">\n              <span class=\"fa fa-refresh\" ng-click=\"refreshProfiles()\" ng-class=\"{\'fa-spin\': profiles.loading}\"></span>\n            </span>\n          </div>\n          <span ng-show=\"profiles.cart.length == 0\" class=\"help-block\">At least one profile is required</span>\n        </div>\n      </div>\n      <div class=\"form-group has-feedback\" ng-class=\"containers.cart.length > 0 ? \'has-success\' : \'has-error\'\">\n        <label class=\"control-label col-sm-2\">Container(s)</label>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group\">\n            <ui-select multiple sortable=\"true\" ng-model=\"containers.cart\" theme=\"bootstrap\" aria-describedby=\"selectContainersStatus\">\n              <ui-select-match placeholder=\"Select containers...\">{{$item.name}}</ui-select-match>\n              <ui-select-choices repeat=\"container in (containers.data | filter: $select.search)\">\n                <div ng-bind-html=\"container.name | highlight: $select.search\"></div>\n              </ui-select-choices>\n              <ui-select-no-choice>\n                No container is available! Click on the refresh button\n              </ui-select-no-choice>\n            </ui-select>\n            <span class=\"glyphicon form-control-feedback\" ng-class=\"containers.cart.length > 0 ? \'glyphicon-ok\' : \'glyphicon-remove\'\" aria-hidden=\"true\"></span>\n            <span id=\"selectContainersStatus\" class=\"sr-only\">{{containers.cart.length > 0 ? \'(success)\' : \'(error)\'}}</span>\n            <span class=\"input-group-addon\">\n              <span class=\"fa fa-refresh\" ng-click=\"refreshContainers()\" ng-class=\"{\'fa-spin\': containers.loading}\"></span>\n            </span>\n          </div>\n          <span ng-show=\"containers.cart.length == 0\" class=\"help-block\">At least one container must be selected</span>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"col-sm-offset-2 col-sm-9\">\n          <button class=\"btn btn-primary pull-right\" ng-disabled=\"profiles.cart.length == 0 || containers.cart.length == 0 || containers.loading || saving()\" ng-click=\"assignProfiles()\"><i class=\"fa fa-cloud-upload\"></i> Assign</button>\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <h2>Containers <i ng-show=\"containers.loading\" class=\"fa fa-refresh fa-spin\"></i> <span class=\"badge\">{{containers.cart.length + \'/\' + containers.data.length}}</span></h2>\n\n  <div class=\"row\" block-ui=\"blockTable\">\n    <div ng-include=\"\'plugins/profiles/html/containerList.html\'\"></div>\n  </div>\n\n</div>\n");
$templateCache.put("plugins/profiles/html/containerList.html","<div ng-controller=\"Profiles.ContainerListController\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <table class=\"table table-bordered table-striped\" hawtio-simple-table=\"tableConfig\"></table>\n    </div>\n  </div>\n</div>\n\n<script type=\"text/ng-template\" id=\"containerName.html\">\n  <div class=\"ngCellText nowrap\">\n    <a ng-if=\"row.entity.deployment\" href=\"\" title=\"View details for {{row.entity.name}}\"\n       ng-href=\"{{row.entity.deployment | kubernetesPageLink}}\">\n      {{row.entity.name}}\n    </a>\n    <span ng-if=\"!row.entity.deployment\">{{row.entity.name}}</span>\n  </div>\n</script>\n\n<script type=\"text/ng-template\" id=\"containerPods.html\">\n  <div class=\"ngCellText nowrap\">\n    <i ng-if=\"!row.entity.deployment || row.entity.deployment.$pods.length === 0\" class=\"fa fa-power-off\"></i>\n    <ul class=\"plain-list\">\n      <li ng-repeat=\"pod in row.entity.deployment.$pods\">\n        <i ng-class=\"pod.$statusCss\"></i>\n        <a href=\"\" title=\"View details for {{pod.metadata.name}}\"\n           ng-href=\"{{pod | kubernetesPageLink}}\">\n          {{pod.metadata.name}}\n        </a>\n        <span ng-show=\"pod.$jolokiaUrl && pod.$ready\" ng-controller=\"Kubernetes.ConnectController\">\n          <!--\n            Redirects to the OpenShift JVM plugin for the corresponding pod\n            Requires to use the \'serve-site\' task for local development\n          -->\n          <a class=\"clickable\"\n             ng-click=\"doConnect(pod)\"\n             title=\"Open a new window and connect to this container\">\n            <i class=\"fa fa-sign-in\"></i>\n          </a>\n        </span>\n        <span ng-show=\"pod.status.phase === \'Running\'\" ng-controller=\"Kubernetes.TermController\">\n          <span ng-repeat=\"container in pod.spec.containers\" ng-show=\"canConnectTo(container)\">\n            <a href=\"\" ng-href=\"{{pod | kubernetesPageLink:\'term\':container.name}}\">\n              <i class=\"fa fa-television clickable\" title=\"Open up a terminal to {{pod.metadata.name}}:{{container.name}}\"></i>\n            </a>\n          </span>\n        </span>\n        <span ng-show=\"pod.status.phase === \'Running\'\" ng-controller=\"Kubernetes.PodLogLinkController\">\n          <span ng-repeat=\"container in pod.spec.containers\">\n            <a href=\"\" ng-href=\"{{pod | kubernetesPageLink:\'log\':container.name}}\">\n              <i class=\"fa fa-file-text clickable\" title=\"Open up the log for {{pod.metadata.name}}:{{container.name}}\"></i>\n            </a>\n          </span>\n        </span>\n      </li>\n    </ul>\n  </div>\n</script>\n\n<script type=\"text/ng-template\" id=\"containerTypes.html\">\n  <div class=\"ngCellText nowrap\">\n    <ul class=\"plain-list\">\n      <li class=\"inline-block\" ng-repeat=\"icon in row.entity.icons\">\n        <hawtio-icon config=\"icon\"/>\n      </li>\n    </ul>\n  </div>\n</script>\n\n<script type=\"text/ng-template\" id=\"containerProfiles.html\">\n  <div class=\"ngCellText nowrap\">\n    <ul class=\"plain-list\">\n      <li class=\"inline-block\" ng-repeat=\"profile in row.entity.profiles\">\n        <button ng-if=\"profile.id\" class=\"btn btn-link\" ng-click=\"$parent.$parent.$parent.$parent.viewProfile(profile);$event.stopPropagation();\">{{profile.id}} <i class=\"fa fa-files-o\"></i></button>\n        <span ng-if=\"!profile.id\" class=\"text-muted\">\n          {{profile}}\n          <i ng-if=\"$parent.$parent.$parent.$parent.profiles.loading\" class=\"fa fa-refresh fa-spin\"></i>\n          <i ng-if=\"$parent.$parent.$parent.$parent.profiles.loaded\" class=\"fa fa-chain-broken\"></i>\n        </span>\n      </li>\n    </ul>\n  </div>\n</script>");
$templateCache.put("plugins/profiles/html/containers.html","<div ng-controller=\"Profiles.ContainersController\">\n\n  <div class=\"row\">\n    <div template-cache-include=\"plugins/kubernetes/html/tabs.html\"></div>\n  </div>\n\n  <button class=\"btn btn-primary pull-right\" ng-disabled=\"containers.loading\" ng-click=\"refresh()\">\n    <i class=\"fa fa-refresh\" ng-class=\"{\'fa-spin\': containers.loading}\"></i> Refresh\n  </button>\n\n  <h2>Containers <i ng-show=\"containers.loading\" class=\"fa fa-refresh fa-spin\"></i> <span class=\"badge\" ng-show=\"containers.data.length > 0\">{{containers.length}}</span></h2>\n\n  <div class=\"row\" block-ui=\"blockTable\">\n    <div ng-include=\"\'plugins/profiles/html/containerList.html\'\"></div>\n  </div>\n\n  <div class=\"row pull-right\">\n    <button class=\"btn btn-link\"\n            type=\"button\"\n            ng-disabled=\"containers.loading || saving()\"\n            ng-click=\"createContainers()\"\n            title=\"Create new container(s) from a set of profiles\">\n      Create <i class=\"fa fa-cubes\"></i>\n    </button>\n    <button class=\"btn btn-link\"\n            type=\"button\"\n            ng-disabled=\"!containers.cart.length || containers.loading || saving()\"\n            ng-click=\"assignProfiles()\"\n            title=\"Modify the selected container(s) by changing the set of profiles\">\n      Assign profiles <i class=\"fa fa-magic\"></i>\n    </button>\n    <button class=\"btn btn-danger\"\n            type=\"button\"\n            ng-disabled=\"!containers.cart.length || containers.loading || saving()\"\n            ng-click=\"deleteContainers()\"\n            title=\"Delete the selected container(s)\">\n      Delete <i class=\"fa fa-times-circle\"></i>\n    </button>\n  </div>\n\n</div>");
$templateCache.put("plugins/profiles/html/deployProfiles.html","<div ng-controller=\"Profiles.DeployProfilesController\">\n\n  <div class=\"row\">\n    <div template-cache-include=\"plugins/kubernetes/html/tabs.html\"></div>\n  </div>\n\n  <h2>Deploy profile(s) into new container(s)</h2>\n\n  <div class=\"row\">\n    <form class=\"form-horizontal\">\n      <div class=\"form-group has-feedback\" ng-class=\"profiles.cart.length > 0 ? \'has-success\' : \'has-error\'\">\n        <label class=\"control-label col-sm-2\">Profile(s)</label>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group\">\n            <ui-select multiple sortable=\"true\" ng-model=\"profiles.cart\" theme=\"bootstrap\" aria-describedby=\"selectProfilesStatus\">\n              <ui-select-match placeholder=\"Select profiles...\">\n                <img ng-if=\"$item.iconUrl\" width=\"16px\" height=\"16px\"\n                     class=\"profile-logo\" style=\"max-width: 16px; max-height: 16px\"\n                     src=\"img/loader.svg\"\n                     http-src=\"{{gitRestUrl($item.iconUrl)}}\" media-type=\"image/svg+xml\" />\n                <img ng-if=\"!$item.iconUrl\" width=\"16px\" height=\"16px\"\n                     class=\"profile-logo\" style=\"max-width: 16px; max-height: 16px\"\n                     src=\"img/fabric8_icon.svg\" />\n                {{$item.id}}\n              </ui-select-match>\n              <ui-select-choices group-by=\"profileGroups\" repeat=\"profile in (profiles.data | filter: $select.search) track by profile.id\">\n                <img ng-if=\"profile.iconUrl\"\n                     class=\"profile-logo\" style=\"max-width: 32px; max-height: 32px\"\n                     src=\"img/loader.svg\"\n                     http-src=\"{{gitRestUrl(profile.iconUrl)}}\" media-type=\"image/svg+xml\" />\n                <img ng-if=\"!profile.iconUrl\"\n                     class=\"profile-logo\" style=\"max-width: 32px; max-height: 32px\"\n                     src=\"img/fabric8_icon.svg\" />\n                <span ng-bind-html=\"profile.id | highlight: $select.search\"></span>\n              </ui-select-choices>\n              <ui-select-no-choice>\n                <a ng-click=\"refreshProfiles()\">No profile is available. Click to refresh available profiles.</a>\n              </ui-select-no-choice>\n            </ui-select>\n            <span class=\"glyphicon form-control-feedback\" ng-class=\"profiles.cart.length > 0 ? \'glyphicon-ok\' : \'glyphicon-remove\'\" aria-hidden=\"true\"></span>\n            <span id=\"selectProfilesStatus\" class=\"sr-only\">{{profiles.cart.length > 0 ? \'(success)\' : \'(error)\'}}</span>\n            <span class=\"input-group-addon\">\n              <span class=\"fa fa-refresh\" ng-click=\"refreshProfiles()\" ng-class=\"{\'fa-spin\': profiles.loading}\"></span>\n            </span>\n          </div>\n          <span ng-show=\"profiles.cart.length == 0\" class=\"help-block\">At least one profile is required</span>\n        </div>\n      </div>\n      <div class=\"form-group has-feedback\" ng-class=\"(status = select.names.length > 0 ? ((existing = existingContainers(select.names)).length > 0 ? \'has-warning\' : \'has-success\') : \'has-error\')\">\n        <label class=\"control-label col-sm-2\">Name(s)</label>\n        <div class=\"col-sm-9\">\n          <ui-select multiple tagging tagging-label=\"false\" tagging-tokens=\"ENTER|SPACE\" ng-model=\"select.names\" theme=\"bootstrap\" aria-describedby=\"selectNamesStatus\">\n            <ui-select-match placeholder=\"Enter names...\">\n              <span ng-if=\"existing.indexOf($item) >= 0\" class=\"glyphicon glyphicon-alert\" ng-class=\"{\'text-warning\': $selectMultiple.activeMatchIndex !== $index}\" aria-hidden=\"true\"></span>\n              <span ng-class=\"{\'text-warning\': existing.indexOf($item) >= 0 && $selectMultiple.activeMatchIndex !== $index}\">{{$item}}</span>\n            </ui-select-match>\n            <ui-select-choices repeat=\"item in []\"></ui-select-choices>\n          </ui-select>\n          <span class=\"glyphicon form-control-feedback\" ng-class=\"select.names.length > 0 ? (existing.length > 0 ? \'glyphicon-warning-sign\' : \'glyphicon-ok\') : \'glyphicon-remove\'\" aria-hidden=\"true\"></span>\n          <span id=\"selectNamesStatus\" class=\"sr-only\">{{select.names.length > 0 ? \'(success)\' : \'(error)\'}}</span>\n          <span ng-show=\"select.names.length == 0\" class=\"help-block\">At least one container name is required</span>\n          <span ng-show=\"select.names.length != 0 && existing.length > 0\" class=\"help-block\">Some container profiles will be overwritten</span>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"col-sm-offset-2 col-sm-9\">\n          <button class=\"btn btn-primary pull-right\" ng-disabled=\"profiles.cart.length == 0 || select.names.length == 0 || containers.loading || saving()\" ng-click=\"deployProfiles()\"><i class=\"fa fa-cloud-upload\"></i> Deploy</button>\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <h2>Existing containers <i ng-show=\"containers.loading\" class=\"fa fa-refresh fa-spin\"></i> <span class=\"badge\">{{containers.data.length}}</span></h2>\n\n  <div class=\"row\" block-ui=\"blockTable\">\n    <div ng-include=\"\'plugins/profiles/html/containerList.html\'\"></div>\n  </div>\n\n</div>\n");
$templateCache.put("plugins/profiles/html/profileSummary.html","<div class=\"row\">\n  <div class=\"col-md-2\">\n    <a ng-href=\"{{wikiLink(profile.path)}}\">Details...</a>\n    <!-- ideally angular-img-http-src would reuse the same BLOB for the same URLs though\n         it seems it creates a new one each time -->\n    <!-- TODO: use the fileExtensionTypeRegistry service to retrieve the MIME type -->\n    <img class=\"profile-logo\" ng-if=\"profile.iconUrl\" src=\"img/loader.svg\" http-src=\"{{gitRestUrl(profile.iconUrl)}}\" media-type=\"image/svg+xml\" />\n    <img class=\"profile-logo\" ng-if=\"!profile.iconUrl\" src=\"img/fabric8_icon.svg\" />\n  </div>\n\n  <div class=\"col-md-10\">\n    <i ng-hide=\"profile.summary\" class=\"fa fa-refresh fa-spin\"></i>\n    <!-- We need to use compile directive so that the http-src directive from angular-img-http-src applied -->\n    <div class=\"profile-summary\" ng-show=\"profile.summary\" compile=\"profile.summary\"></div>\n  </div>\n</div>");
$templateCache.put("plugins/profiles/html/profiles.html","<div ng-controller=\"Profiles.ProfilesController\">\n\n  <div class=\"row\">\n    <div template-cache-include=\"plugins/kubernetes/html/tabs.html\"></div>\n  </div>\n\n  <button class=\"btn btn-primary pull-right\" ng-disabled=\"loading()\" ng-click=\"refresh()\">\n    <i class=\"fa fa-refresh\" ng-class=\"{\'fa-spin\': loading()}\"></i> Refresh\n  </button>\n\n  <h2 class=\"inline-block\">\n    Profiles\n    <i ng-show=\"loading()\" class=\"fa fa-refresh fa-spin\"></i>\n    <span class=\"badge\" ng-show=\"profiles.length > 0\">{{selectedTags.length > 0 || !isBlank(searchFilter) ? (filteredProfiles = (profiles | selectedTags:\'tags\':selectedTags | filterCollection:searchFilter)).length + \' / \' + profiles.length : (filteredProfiles = profiles).length}}</span>\n    <hawtio-filter ng-model=\"searchFilter\"\n                   css-class=\"search-input\"\n                   placeholder=\"Search...\"\n                   save-as=\"profiles-search-filter\">\n    </hawtio-filter>\n  </h2>\n\n  <div>\n    <div class=\"row-fluid\">\n      <div class=\"col-md-8\">\n        <accordion close-others=\"false\">\n          <accordion-group ng-init=\"profileView = profileViews[profile.id]\" is-open=\"profileView.openOrSingle\" ng-repeat=\"profile in filteredProfiles\">\n            <accordion-heading>\n              <div class=\"pull-left\">\n                <i class=\"glyphicon\" ng-class=\"{\'glyphicon-chevron-down\': profileView.openOrSingle, \'glyphicon-chevron-right\': !profileView.openOrSingle}\"></i>\n              </div>\n              <div class=\"pull-right\">\n                <!-- See https://github.com/angular-ui/bootstrap/issues/3299 -->\n                <hawtio-tag-list tags=\"profile.tags\" selected=\"selectedTags\"\n                                 ng-click=\"$event.stopPropagation();$event.preventDefault();\"></hawtio-tag-list>\n                <input type=\"checkbox\" ng-checked=\"isInGroup(selection, profile)\"\n                       ng-click=\"toggleSelectionFromGroup(selection, profile);$event.stopPropagation();\">\n              </div>\n              <div class=\"ellipsis\">\n                {{profile.id}}\n              </div>\n            </accordion-heading>\n            <div ng-if=\"profileView.openOrSingle\" ng-include=\"\'plugins/profiles/html/profileSummary.html\'\" onload=\"loadSummary(profile)\"></div>\n          </accordion-group>\n        </accordion>\n      </div>\n\n      <div class=\"col-md-4\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\"><i class=\"fa fa-cart-arrow-down\"></i> Selection</h3>\n          </div>\n          <div class=\"panel-body\">\n            <div ng-hide=\"selection.length > 0\">\n              <em class=\"text-muted\">Select profiles...</em>\n            </div>\n            <ul class=\"plain-list\">\n              <li class=\"inline-block\" style=\"max-width: 100%\" ng-repeat=\"profile in selection\">\n                <span type=\"button\" style=\"max-width: 100%\" class=\"btn btn-default btn-xs ellipsis\">\n                  <span type=\"button\" class=\"close\" aria-label=\"Close\" ng-click=\"toggleSelectionFromGroup(selection, profile)\"><span aria-hidden=\"true\">&times;</span>\n                  </span>\n                  <img ng-if=\"profile.iconUrl\" width=\"16px\" height=\"16px\"\n                       class=\"profile-logo\" style=\"max-width: 16px; max-height: 16px\"\n                       src=\"img/loader.svg\"\n                       http-src=\"{{gitRestUrl(profile.iconUrl)}}\" media-type=\"image/svg+xml\" />\n                  <img ng-if=\"!profile.iconUrl\" width=\"16px\" height=\"16px\"\n                       class=\"profile-logo\" style=\"max-width: 16px; max-height: 16px\"\n                       src=\"img/fabric8_icon.svg\" />\n                  <span>\n                    {{profile.id}}\n                  </span>\n                </span>\n                <small><i ng-if=\"!$last\" class=\"fa fa-plus text-muted\"></i></small>\n                <span ng-if=\"$last\" type=\"button\" class=\"glyphicon glyphicon-trash text-muted\" ng-click=\"selection.length = 0\" aria-hidden=\"true\"></span>\n              </li>\n            </ul>\n            <div class=\"pull-right\">\n              <button class=\"btn btn-link\"\n                      type=\"button\"\n                      ng-disabled=\"!selection.length\"\n                      ng-click=\"deployProfiles()\"\n                      title=\"Deploy the selected profile(s) into new container(s)\">\n                Deploy <i class=\"fa fa-cubes\"></i>\n              </button>\n              <button class=\"btn btn-link\"\n                      type=\"button\"\n                      ng-disabled=\"!selection.length\"\n                      ng-click=\"assignProfiles()\"\n                      title=\"Assign the selected profile(s) to existing container(s)\">\n                Assign <i class=\"fa fa-magic\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\"><i class=\"fa fa-tags\"></i> Tags</h3>\n          </div>\n          <div class=\"panel-body\">\n            <hawtio-tag-filter class=\"tag-filter\"\n                               tags=\"tags\"\n                               selected=\"selectedTags\"\n                               collection=\"profiles\"\n                               collection-property=\"tags\">\n            </hawtio-tag-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>");
$templateCache.put("plugins/profiles/html/settings.html","<div ng-controller=\"Profiles.SettingsController\">\n\n  <div class=\"row\">\n    <div template-cache-include=\"plugins/kubernetes/html/tabs.html\"></div>\n  </div>\n\n  <button class=\"btn btn-primary pull-right\" ng-disabled=\"loading != 0\" ng-click=\"refresh()\">\n    <i class=\"fa fa-refresh\" ng-class=\"{\'fa-spin\': loading != 0}\"></i> Refresh\n  </button>\n\n  <h2>Settings <i ng-hide=\"loading == 0\" class=\"fa fa-refresh fa-spin\"></i></h2>\n\n  <div>\n    Settings for building containers from Fabric8 profiles repository\n  </div>\n\n  <div class=\"row\">\n    <button class=\"btn btn-primary pull-right\"\n            title=\"Saves changes to profiles settings\"\n            ng-disabled=\"loading != 0\"\n            ng-click=\"save()\">\n        Save Changes\n    </button>\n  </div>\n\n  <div hawtio-form-2=\"config\" entity=\"properties\"></div>\n\n</div>");}]); hawtioPluginLoader.addModule("hawtio-profiles-templates");